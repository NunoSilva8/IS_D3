[2021-12-06 17:17:39,805] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@5fe5c6f, name=log4j:logger=kafka.controller (kafka.controller)
[2021-12-06 17:17:45,819] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@5fe5c6f, name=log4j:logger=kafka.controller (kafka.controller)
[2021-12-06 17:18:36,166] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@5fe5c6f, name=log4j:logger=kafka.controller (kafka.controller)
[2021-12-06 17:19:49,971] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-12-06 17:19:50,010] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2021-12-06 17:19:50,013] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2021-12-06 17:19:50,020] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2021-12-06 17:19:50,025] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2021-12-06 17:19:50,033] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2021-12-06 17:19:50,071] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 47) (kafka.controller.KafkaController)
[2021-12-06 17:19:50,086] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-12-06 17:19:50,093] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2021-12-06 17:19:50,106] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2021-12-06 17:19:50,107] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2021-12-06 17:19:50,108] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2021-12-06 17:19:50,108] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2021-12-06 17:19:50,110] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2021-12-06 17:19:50,112] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2021-12-06 17:19:50,113] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2021-12-06 17:19:50,113] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2021-12-06 17:19:50,114] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2021-12-06 17:19:50,117] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2021-12-06 17:19:50,139] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2021-12-06 17:19:50,140] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-12-06 17:19:50,150] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-12-06 17:19:50,151] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2021-12-06 17:19:50,152] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2021-12-06 17:19:50,153] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2021-12-06 17:19:50,158] INFO [RequestSendThread controllerId=0] Controller 0 connected to Nuno-PC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-12-06 17:19:50,159] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2021-12-06 17:19:50,160] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2021-12-06 17:19:50,172] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2021-12-06 17:19:50,173] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2021-12-06 17:19:50,173] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2021-12-06 17:19:50,174] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2021-12-06 17:19:50,176] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2021-12-06 17:19:50,203] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2021-12-06 17:19:55,206] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-06 17:19:55,207] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-06 17:23:50,113] INFO [Controller id=0] New topics: [Set(teste)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(teste,Some(89Grsv_3R2m3xKrKp17P9w),Map(teste-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2021-12-06 17:23:50,118] INFO [Controller id=0] New partition creation callback for teste-0 (kafka.controller.KafkaController)
[2021-12-06 17:23:50,237] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(v1CabzodR7m3PkfsUif0pw),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2021-12-06 17:23:50,237] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2021-12-06 17:24:55,218] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-06 17:24:55,218] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-06 17:24:55,222] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2021-12-06 17:24:55,223] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-06 17:29:55,234] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-06 17:29:55,234] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-06 17:29:55,235] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2021-12-06 17:29:55,235] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-06 17:34:55,237] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-06 17:34:55,237] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-06 17:34:55,238] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2021-12-06 17:34:55,238] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-06 17:39:55,251] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-06 17:39:55,251] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-06 17:39:55,252] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2021-12-06 17:39:55,252] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-06 17:44:55,261] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-06 17:44:55,261] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-06 17:44:55,262] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2021-12-06 17:44:55,262] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-06 17:49:55,272] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-06 17:49:55,272] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-06 17:49:55,273] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2021-12-06 17:49:55,273] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-06 17:54:55,276] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-06 17:54:55,276] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-06 17:54:55,277] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2021-12-06 17:54:55,277] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-06 17:59:55,289] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-06 17:59:55,289] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-06 17:59:55,289] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2021-12-06 17:59:55,289] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-06 18:04:55,304] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-06 18:04:55,305] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-06 18:04:55,306] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2021-12-06 18:04:55,306] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-12-06 18:09:55,316] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-12-06 18:09:55,316] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-12-06 18:09:55,316] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2021-12-06 18:09:55,317] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
